name: Build and Release APK

on:
  push:
    branches:
      - main 
      - feature/**

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permissions for creating release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # Use a specific Flutter version or '3.x' for the latest 3.x

      - name: Install required system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            mesa-utils \
            libegl1-mesa-dev \
            libgles2-mesa-dev \
            libxrandr2 \
            libxinerama1 \
            libxcursor1 \
            libxi6 \
            libxss1 \
            libxcomposite1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libnss3-dev \
            libasound2-dev

      - name: Install FVM
        run: | 
          flutter pub global activate fvm
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Setup Android SDK properly
        run: |
          # Ensure Android SDK is properly configured
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/tools/bin" >> $GITHUB_PATH
          
          # Accept Android licenses
          yes | sdkmanager --licenses || true

      - name: Get Flutter packages
        run: fvm flutter pub get

      - name: Create configs directory
        run: mkdir -p configs

      - name: Install jq (JSON processor)
        run: sudo apt-get install -y jq

      - name: Run Flutter Doctor
        run: |
          fvm flutter doctor -v
          echo "Checking for critical issues..."
          
          # Check if Android toolchain is working
          if ! fvm flutter doctor | grep -q "✓.*Android toolchain"; then
            echo "⚠️  Android toolchain issues detected"
          fi

      

      - name: Create private.json (simple cleanup)
        run: |
          # Remove common GitHub Actions escaping
          echo '${{secrets.PRIVATE_JSON_CONTENT}}' | \
          sed 's/^\$'"'"'//g' | \
          sed 's/'"'"'$//g' | \
          sed 's/\\n/\n/g' | \
          sed 's/^\*\*\*//g' | \
          sed 's/\*\*\*$//g' | \
          jq . > configs/private.json

      - name: Verify private.json exists and is valid
        run: |
          if [ ! -f configs/private.json ]; then
            echo "❌ Error: configs/private.json was not created. Build will fail."
            exit 1
          fi
          
          echo "✅ private.json exists"
          echo "File size: $(wc -c < configs/private.json) bytes"
          
          # Validate JSON structure
          if jq . configs/private.json > /dev/null 2>&1; then
            echo "✅ JSON is valid"
            echo "Keys found: $(jq -r 'keys | join(", ")' configs/private.json)"
          else
            echo "❌ JSON is invalid"
            echo "Content:"
            cat configs/private.json
            exit 1
          fi

      

      - name: Build APK
        run: |
          echo "Building APK with proper Android configuration..."
          fvm flutter clean
          fvm flutter pub get
          fvm flutter build apk --release

      - name: Get app version
        id: get_version
        run: echo "APP_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/') # Only create release on branch pushes
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: Release ${{ steps.get_version.outputs.APP_VERSION }}
          tag_name: v${{ steps.get_version.outputs.APP_VERSION }}-${{ github.run_number }}
          body: |
            ## New Release

            Version: ${{ steps.get_version.outputs.APP_VERSION }}
            Build Number: ${{ github.run_number }}

            ### Download
            [Download APK](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.APP_VERSION }}-${{ github.run_number }}/app-release.apk)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}