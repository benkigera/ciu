name: Build and Release APK

on:
  push:
    branches:
      - main 
      - feature/**

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permissions for creating release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # Use a specific Flutter version or '3.x' for the latest 3.x

      - name: Install FVM
        run: | 
          flutter pub global activate fvm
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Get Flutter packages
        run: fvm flutter pub get

      - name: Create configs directory
        run: mkdir -p configs

      - name: Install jq (JSON processor)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: "Debug: Print raw PRIVATE_JSON_CONTENT"
        run: |
          echo "Raw secret content:"
          printf "%q\n" "${{secrets.PRIVATE_JSON_CONTENT}}"

      - name: Create private.json (simple cleanup)
        run: |
          # Remove common GitHub Actions escaping
          echo '${{secrets.PRIVATE_JSON_CONTENT}}' | \
          sed 's/^\$'"'"'//g' | \
          sed 's/'"'"'$//g' | \
          sed 's/\\n/\n/g' | \
          sed 's/^\*\*\*//g' | \
          sed 's/\*\*\*$//g' | \
          jq . > configs/private.json

      - name: Verify private.json exists and is valid
        run: |
          if [ ! -f configs/private.json ]; then
            echo "❌ Error: configs/private.json was not created. Build will fail."
            exit 1
          fi
          
          echo "✅ private.json exists"
          echo "File size: $(wc -c < configs/private.json) bytes"
          
          # Validate JSON structure
          if jq . configs/private.json > /dev/null 2>&1; then
            echo "✅ JSON is valid"
            echo "Keys found: $(jq -r 'keys | join(", ")' configs/private.json)"
          else
            echo "❌ JSON is invalid"
            echo "Content:"
            cat configs/private.json
            exit 1
          fi

      - name: "Debug: Show final private.json content"
        run: |
          echo "Final private.json content:"
          jq . configs/private.json

      - name: Build APK
        run: fvm flutter build apk --release

      - name: Get app version
        id: get_version
        run: echo "APP_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/') # Only create release on branch pushes
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: Release ${{ steps.get_version.outputs.APP_VERSION }}
          tag_name: v${{ steps.get_version.outputs.APP_VERSION }}-${{ github.run_number }}
          body: |
            ## New Release

            Version: ${{ steps.get_version.outputs.APP_VERSION }}
            Build Number: ${{ github.run_number }}

            ### Download
            [Download APK](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.APP_VERSION }}-${{ github.run_number }}/app-release.apk)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}